import { HardhatRuntimeEnvironment } from "hardhat/types";
import { DeployFunction } from "hardhat-deploy/types";
//  import { ethers } from "ethers"; Importa ethers directamente
import { Contract } from "ethers";
import { ethers } from "hardhat";


const deployContracts: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
    const { deployer } = await hre.getNamedAccounts();
    const { deploy } = hre.deployments;

    // Desplegar TokenA
    const tokenA = await deploy("TokenA", {
        from: deployer,
        args: [ethers.utils.parseEther("1000000")],  // Usamos ethers directamente aquí
        log: true,
        autoMine: true,
    });
    console.log("TokenA deployed to:", tokenA.address);

    // Desplegar TokenB
    const tokenB = await deploy("TokenB", {
        from: deployer,
        args: [ethers.utils.parseEther("1000000")],  // Usamos ethers directamente aquí
        log: true,
        autoMine: true,
    });
    console.log("TokenB deployed to:", tokenB.address);

    // Desplegar SimpleDEX
    const simpleDEX = await deploy("SimpleDEX", {
        from: deployer,
        args: [tokenA.address, tokenB.address],  // Argumentos del constructor
        log: true,
        autoMine: true,
    });
    console.log("SimpleDEX deployed to:", simpleDEX.address);

    const simpleDEXContract = await hre.ethers.getContract<Contract>("SimpleDEX", deployer);
    // Interacciones adicionales si es necesario
};

export default deployContracts;

deployContracts.tags = ["SimpleDEX", "TokenA", "TokenB"];
